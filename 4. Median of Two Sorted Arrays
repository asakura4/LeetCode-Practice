4. Median of Two Sorted Arrays

Share
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5


1.O(n) solution:

class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        mid = (len(nums1) + len(nums2))//2
        cnt = i = j = 0
        mergeArray = list()
        while i < len(nums1) or j < len(nums2):
            if i >= len(nums1):
                mergeArray.append(nums2[j])
                j += 1
            elif j >= len(nums2):
                mergeArray.append(nums1[i])
                i += 1
                            
            else:
                if nums1[i] <= nums2[j]:
                    mergeArray.append(nums1[i])
                    i += 1
                    
                else:
                    mergeArray.append(nums2[j])
                    j += 1
                    
            if cnt == mid:
                break

            
            cnt += 1
        
        if (len(nums1) + len(nums2))%2 == 1 :
            return mergeArray[mid]
        else:
            return float( mergeArray[mid-1] +  mergeArray[mid])/2
  
  
  2. O(log(m+n)) solution:
  
  good explanation on medium
  https://medium.com/@hazemu/finding-the-median-of-2-sorted-arrays-in-logarithmic-time-1d3f2ecbeb46
