5. Longest Palindromic Substring
Medium

Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"


Solution 1. Dynamic programming

p[i][j]

if p[i+1][j-1] is true, true
else, false

base case
for p[i][i], true

for p[i][i+1], if s[i] == s[i+1], true else false


class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        maxPalindrome = ""
        isPalindrome = [[False]* len(s) for i in range(len(s))]
        for i in range(len(s)):
            isPalindrome[i][i] = True
            maxPalindrome = s[i]
            
        for sl in range(2, len(s)+1):
            for i in range(len(s) - sl + 1):
                j = i + sl - 1
                if sl == 2 and s[i] == s[j]:
                    isPalindrome[i][j] = True
                    maxPalindrome = s[i:i+sl]
                elif s[i] == s[j] and isPalindrome[i+1][j-1]:
                    isPalindrome[i][j] = True
                    maxPalindrome = s[i:i+sl]
        
        return maxPalindrome
        
Solution 2. check Extend String around from center
Need to check 2n+1 times since for the case that center is in the middle of alphabet
e.g. "abba", center is inside "bb"
Also in O(n^2) with space complexity O(n)




def expandAroundCenter(s, lbound, rbound):
    l = lbound
    r = rbound
    while l >= 0 and r < len(s) and s[l] == s[r]:
        l -= 1
        r += 1
    
    return r - l - 2 + 1


class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        maxPalindrome = ""
        start = 0
        end = 0
        for i in range(len(s)):
            len1 = expandAroundCenter(s, i, i)
            len2 = expandAroundCenter(s, i, i+1)
            maxLen = max(len1, len2)
            if maxLen > end - start:
                start = i - (maxLen-1)//2
                end = i + maxLen//2
                
            
        return s[start:end+1]


